{{ if .Values.autoscaling.enabled }}
{{- if and (.Values.streams.appId) (.Values.autoscaling.consumerGroup) -}}
{{- fail "streams.appId and autoscaling.consumerGroup are mutually exclusive. You can use use streams.appId for apps 2.17.0+. If you don't want to set your app id via Helm or you're using an older version, but still want to use KEDA autoscaling, set autoscaling.consumerGroup" -}}
{{- end -}}
{{- $consumerGroup := coalesce .Values.streams.appId .Values.autoscaling.consumerGroup -}}
{{- $root := . -}}
apiVersion: keda.sh/v1alpha1
kind: ScaledObject
metadata:
  name: {{ template "streams-app.fullname" . }}-so
spec:
  scaleTargetRef:
    {{- if .Capabilities.APIVersions.Has "apps/v1" }}
    apiVersion: apps/v1
    {{- else }}
    apiVersion: apps/v1beta1
    {{- end }}
    {{- if .Values.statefulSet }}
    kind: StatefulSet
    {{- else }}
    kind: Deployment
    {{- end }}
    name: {{ template "streams-app.fullname" . }}
  pollingInterval: {{ .Values.autoscaling.pollingInterval }}
  cooldownPeriod:  {{ .Values.autoscaling.cooldownPeriod }}
  minReplicaCount: {{ .Values.autoscaling.minReplicas }}
  maxReplicaCount: {{ .Values.autoscaling.maxReplicas }}
  {{- if hasKey .Values.autoscaling "idleReplicas" }}
  # Only available from KEDA 2.4 onwards
  idleReplicaCount: {{ .Values.autoscaling.idleReplicas }}
  {{- end }}
  triggers:
    {{- if not (or .Values.streams.inputTopics .Values.autoscaling.internalTopics .Values.autoscaling.topics .Values.streams.extraInputTopics .Values.autoscaling.additionalTriggers) }}
    {{- fail "To use autoscaling, you must define one of .Values.streams.inputTopics, .Values.autoscaling.internalTopics, .Values.autoscaling.topics, .Values.streams.extraInputTopics or .Values.autoscaling.additionalTriggers" }}
    {{- end}}
    # todo: concat .Values.streams.inputTopics and .Values.autoscaling.topics to
    # minimize number of loops when we don't need to support helm 2 anymore
    {{- range .Values.streams.inputTopics }}
    - type: kafka
      metadata:
        bootstrapServers: {{ $root.Values.streams.brokers }}
        consumerGroup: {{ $consumerGroup }}
        topic: {{ . | quote }}
        lagThreshold: {{ $root.Values.autoscaling.lagThreshold | quote }}
        offsetResetPolicy: {{ $root.Values.autoscaling.offsetResetPolicy }}
    {{- end }}
    {{- range .Values.autoscaling.internalTopics }}
    - type: kafka
      metadata:
        bootstrapServers: {{ $root.Values.streams.brokers }}
        consumerGroup: {{ $consumerGroup }}
        topic: {{ printf "%s-%s" $consumerGroup . | quote }}
        lagThreshold: {{ $root.Values.autoscaling.lagThreshold | quote }}
        offsetResetPolicy: {{ $root.Values.autoscaling.offsetResetPolicy }}
    {{- end }}
    {{- range .Values.autoscaling.topics }}
    - type: kafka
      metadata:
        bootstrapServers: {{ $root.Values.streams.brokers }}
        consumerGroup: {{ $consumerGroup }}
        topic: {{ . | quote }}
        lagThreshold: {{ $root.Values.autoscaling.lagThreshold | quote }}
        offsetResetPolicy: {{ $root.Values.autoscaling.offsetResetPolicy }}
    {{- end }}
    {{- range $key, $value := .Values.streams.extraInputTopics }}
    {{- range $topic := $value }}
    - type: kafka
      metadata:
        bootstrapServers: {{ $root.Values.streams.brokers }}
        consumerGroup: {{ $consumerGroup }}
        topic: {{ $topic | quote }}
        lagThreshold: {{ $root.Values.autoscaling.lagThreshold | quote }}
        offsetResetPolicy: {{ $root.Values.autoscaling.offsetResetPolicy }}
    {{- end }}
    {{- end }}
  {{- if .Values.autoscaling.additionalTriggers }}
  {{- .Values.autoscaling.additionalTriggers | toYaml | nindent 4 }}
  {{- end }}
{{ end }}
