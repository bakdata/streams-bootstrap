nameOverride: ""
fullnameOverride: ""

replicaCount: 1

image: streamsApp
imageTag: latest
imagePullPolicy: Always

imagePullSecrets: []

configurationEnvPrefix: "APP"

files: {}
#  log4j2.xml:
#    mountPath: app/resources
#    content: "foo bar"

resources:
  requests:
    cpu: 200m
    memory: 300Mi
  limits:
    cpu: 500m
    memory: 2G

kafka:
  # bootstrapServers: "test:9092"
  # schemaRegistryUrl: "url:1234"
  staticMembership: false
  config: {}
  #   max.poll.records: 500
  #   Note that YAML may convert large integers to scientific notation. Use Strings to avoid this.
  #   max.request.size: "1000000"
  inputTopics: []
  # - input
  # - input2
  labeledInputTopics: {}
  #   label:
  #     - input
  #     - input2
  # inputPattern: .*-input
  labeledInputPatterns: {}
  #   label: .*-input
  # outputTopic: output
  labeledOutputTopics: {}
  #   label: output
  # errorTopic: error
  # applicationId: foo

commandLine: {}
#  MY_CLI_PARAM: "foo-bar"

env: {}
#  MY_ENV_VARIABLE: foo-bar

secrets: {}
#  MY_SECRET: fo-bar
secretRefs: {}
#  MY_SECRET:
#    name: secretName
#    key: secretKey
secretFilesRefs: []
#  - name: my-secret
#    volume: secret-volume
#    mountPath: /etc/test
#    readOnly: true
#    subPath: optional-subpath

# Additional ports
ports: []
#     # Number of the port to expose
#   - containerPort: 8080
#     # Optional: Services can reference port by name
#     name: http
#     # Optional: If not set, kubernetes will use 'TCP'
#     protocol: "TCP"
#    # The port that will be exposed by the service.
#     servicePort: 80

service:
  enabled: false
  labels: {}
  type: "ClusterIP"

# Arbitrary Probe v1 definition: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#probe-v1-core
livenessProbe: {}

# Arbitrary Probe v1 definition: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#probe-v1-core
readinessProbe: {}

## Monitoring
## Kafka Connect JMX Settings
## ref: https://kafka.apache.org/documentation/#connect_monitoring
jmx:
  enabled: false
  port: 5555
  host: localhost

autoscaling:
  enabled: false
  # lagThreshold: "1000"
  pollingInterval: 30
  cooldownPeriod: 300
  offsetResetPolicy: earliest
  minReplicas: 0
  maxReplicas: 1
  # idleReplicas: 0
  ## all topics from kafka.inputTopics and kafka.labeledInputTopics are automatically taken
  ## only use the 'internalTopics' option for adding internal topics, i.e., auto-generated topics by Kafka Streams. Consumer group name will automatically be added as a prefix
  internalTopics: []
  #   - bar-repartition                       # results in foo-bar-repartition
  #   - baz-join-subscription-response-topic  # results in foo-baz-join-subscription-response-topic
  ## only use the 'topics' option for adding more topics, e.g., intermediate topics, not covered by `internalTopics`
  topics: []
  #   - bar
  #   - baz
  additionalTriggers: []
#    - type: metrics-api
#      metadata:
#        targetValue: "2"
#        url: "http://custom-metrics-api"
#        valueLocation: "some.json.path"

# serviceAccountName: foo

tolerations: []
#   - key: "foo"
#     operator: "Exists"
#     effect: "NoSchedule"
#   - key: "bar"
#     operator: "Exists"
#     effect: "NoSchedule"

annotations: {}
#  MY_ANNOTATION: "foo-bar"

labels: {}
#  MY_LABEL: "foo-bar"

statefulSet: false

javaOptions:
  maxRAMPercentage: 75
  others: []
#   - "-XX:MinRAMPercentage=50.0"

## Prometheus Exporter Configuration
## ref: https://prometheus.io/docs/instrumenting/exporters/
prometheus:
  ## JMX Exporter Configuration
  ## ref: https://github.com/prometheus/jmx_exporter
  jmx:
    enabled: false
    image: bitnami/jmx-exporter
    imageTag: 1.1.0
    imagePullPolicy: Always
    port: 5556
    metricRules:
      - pattern: ".*"

    ## Resources configuration for the JMX exporter container.
    ## See the `resources` documentation above for details.
    resources:
      requests:
        cpu: 10m
        memory: 100Mi
      limits:
        cpu: 100m
        memory: 100Mi

# priorityClass
# priorityClassName: ""

## Affinity for pod assignment (evaluated as template)
## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
##
affinity: {}

persistence:
  enabled: false

  ## The size of the PersistentVolume to allocate to each streams pod in the StatefulSet.
  size: 1Gi

  ## Kafka Streams data Persistent Volume Storage Class
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  # storageClass: ""

podAnnotations: {}

podLabels: {}

terminationGracePeriodSeconds: 300
