nameOverride: bakdata-streams-app-job

image: streamsApp
imageTag: latest
imagePullPolicy: Always

imagePullSecrets: []

restartPolicy: OnFailure

configurationEnvPrefix: "APP"

# awsRole: my-aws-role

streams:
#  brokers: "test:9092"
#  schemaRegistryUrl: "url:1234"
  passApplicationId: false
  config: {}
#    max.poll.records: 500
#    Note that YAML may convert large integers to scientific notation. Use Strings to avoid this.
#    max.request.size: "1000000"
  inputTopics: []
#  - input
#  - input2
  extraInputTopics: {}
#   role:
#     - input
#     - input2
#  inputPattern: .*-input
  extraInputPatterns: {}
#   role: .*-input
#  outputTopic: output
  extraOutputTopics: {}
#   role: output
#  errorTopic: error
#  productive: true
  deleteOutput: false

commandLine: {}
#  MY_CLI_PARAM: "foo-bar"

debug: false

env: {}
#  MY_ENV_VARIABLE: foo-bar
#
secrets: {}
#  MY_SECRET: fo-bar
secretRefs: {}
#  MY_SECRET:
#    name: secretName
#    key: secretKey

annotations: {}
#  MY_ANNOTATION: "foo-bar"

labels: {}
#  MY_LABEL: "foo-bar"

# serviceAccountName: foo

autoscaling: {}
  # consumerGroup: foo

tolerations: []
#   - key: "foo"
#     operator: "Exists"
#     effect: "NoSchedule"
#   - key: "bar"
#     operator: "Exists"
#     effect: "NoSchedule"

nodeAffinity: {}
#   requiredDuringSchedulingIgnoredDuringExecution:
#     nodeSelectorTerms:
#     - matchExpressions:
#       - key: foo
#         operator: In
#         values:
#         - bar
#         - baz
#   preferredDuringSchedulingIgnoredDuringExecution:
#   - weight: 1
#     preference:
#       matchExpressions:
#       - key: foo
#         operator: In
#         values:
#         - bar
#         - baz

resources:
  requests:
    cpu: 200m
    memory: 300Mi
  limits:
    cpu: 500m
    memory: 2G

javaOptions:
  maxRAMPercentage: 75
  others: []
#   - "-XX:MinRAMPercentage=50.0"

backoffLimit: 6
