nameOverride: bakdata-producer-app

replicaCount: 1

image: producerApp
imageTag: latest
imagePullPolicy: Always

imagePullSecrets: []

# if true, deploy as kubernetes deployment instead of CronJob/Job
deployment: false
# Optional, applied for deployment:
# replicaCount: 1

restartPolicy: OnFailure

configurationEnvPrefix: "APP"

# awsRole: my-aws-role

# Optional: Cron schedule for this producer job
# schedule: "0 12 * * *"

suspend: false

# serviceAccountName: foo

tolerations: []
#   - key: "foo"
#     operator: "Exists"
#     effect: "NoSchedule"
#   - key: "bar"
#     operator: "Exists"
#     effect: "NoSchedule"

nodeAffinity: {}
#   requiredDuringSchedulingIgnoredDuringExecution:
#     nodeSelectorTerms:
#     - matchExpressions:
#       - key: foo
#         operator: In
#         values:
#         - bar
#         - baz
#   preferredDuringSchedulingIgnoredDuringExecution:
#   - weight: 1
#     preference:
#       matchExpressions:
#       - key: foo
#         operator: In
#         values:
#         - bar
#         - baz

resources:
  requests:
    cpu: 200m
    memory: 300Mi
  limits:
    memory: 2G
    cpu: 500m

streams:
#  brokers: "test:9092"
#  schemaRegistryUrl: "url:1234"
  config: {}
#    max.poll.records: 500
#    Note that YAML may convert large integers to scientific notation. Use Strings to avoid this.
#    max.request.size: "1000000"
#  outputTopic: output
  extraOutputTopics: {}
#   role: output

commandLine: {}
#  MY_CLI_PARAM: "foo-bar"

debug: false

env: {}
#  MY_ENV_VARIABLE: foo-bar

secrets: {}
#  MY_SECRET: fo-bar
secretRefs: {}
#  MY_SECRET:
#    name: secretName
#    key: secretKey

annotations: {}
#  MY_ANNOTATION: "foo-bar"

labels: {}
#  MY_LABEL: "foo-bar"

javaOptions:
  maxRAMPercentage: 75
  others: []
#   - "-XX:MinRAMPercentage=50.0"

successfulJobsHistoryLimit: 1
failedJobsHistoryLimit: 1
backoffLimit: 6
# ttlSecondsAfterFinished: 100

# Producer's container ports
ports: []
#  - containerPort: 8080
#  # Service can reference port by name
#    name: http
#  # Optional: If not set, kubernetes will use 'TCP'
#    protocol: "TCP"
#  # The port that will be exposed by the service.
#    servicePort: 80

service:
  enabled: false
  labels: {}
  type: "ClusterIP"

# Arbitrary Probe v1 definition for producer: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#probe-v1-core
livenessProbe: {}

# Arbitrary Probe v1 definition for producer: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.25/#probe-v1-core
readinessProbe: {}
