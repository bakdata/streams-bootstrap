name: Build and Publish

on:
  push:
    tags: ["**"]
    branches:
      - master
  pull_request:

jobs:
  build-and-publish:
    name: Java Gradle
    uses: bakdata/ci-templates/.github/workflows/java-gradle-library.yaml@1.66.1
    with:
      java-version: 17
    secrets:
      sonar-token: ${{ secrets.SONARCLOUD_TOKEN }}
      sonar-organization: ${{ secrets.SONARCLOUD_ORGANIZATION }}
      signing-secret-key-ring: ${{ secrets.SONATYPE_SIGNING_SECRET_KEY_RING }}
      signing-key-id: ${{ secrets.SONATYPE_SIGNING_KEY_ID }}
      signing-password: ${{ secrets.SONATYPE_SIGNING_PASSWORD }}
      ossrh-username: ${{ secrets.SONATYPE_OSSRH_USERNAME }}
      ossrh-password: ${{ secrets.SONATYPE_OSSRH_PASSWORD }}
      github-token: ${{ secrets.GH_TOKEN }}

  extract-javadoc:
    name: Extract Javadoc JARs into docs/javadoc
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: build-artifact
          path: build-artifact

      - name: Extract Javadoc JARs per module
        shell: bash
        run: |
          MODULES=("streams-bootstrap-cli" "streams-bootstrap-test")
          mkdir -p docs/javadoc

          for module in "${MODULES[@]}"; do
            jar_path="build-artifact/$module/build/libs/${module}-*-javadoc.jar"

            echo "Looking for javadoc JAR in: $jar_path"

            if compgen -G "$jar_path" > /dev/null; then
              target_dir="docs/javadoc/$module"
              mkdir -p "$target_dir"
              actual_jar=$(ls $jar_path | head -n 1)

              echo "Extracting $actual_jar to $target_dir"
              unzip -q "$actual_jar" -d "$target_dir"
            else
              echo "No Javadoc JAR found for module: $module"
            fi
          done

  update-docs:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update gh-pages
        uses: ./.github/actions/update-docs
        with:
          username: ${{ secrets.GH_USERNAME }}
          email: ${{ secrets.GH_EMAIL }}
          token: ${{ secrets.GH_TOKEN }}
