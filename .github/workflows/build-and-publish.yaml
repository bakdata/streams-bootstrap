name: Build and Publish

on:
  push:
    tags: ["**"]
    branches:
      - master
  pull_request:

jobs:
  build-and-publish:
    name: Java Gradle
    uses: bakdata/ci-templates/.github/workflows/java-gradle-library.yaml@1.66.1
    with:
      java-version: 17
    secrets:
      sonar-token: ${{ secrets.SONARCLOUD_TOKEN }}
      sonar-organization: ${{ secrets.SONARCLOUD_ORGANIZATION }}
      signing-secret-key-ring: ${{ secrets.SONATYPE_SIGNING_SECRET_KEY_RING }}
      signing-key-id: ${{ secrets.SONATYPE_SIGNING_KEY_ID }}
      signing-password: ${{ secrets.SONATYPE_SIGNING_PASSWORD }}
      ossrh-username: ${{ secrets.SONATYPE_OSSRH_USERNAME }}
      ossrh-password: ${{ secrets.SONATYPE_OSSRH_PASSWORD }}
      github-token: ${{ secrets.GH_TOKEN }}

  extract-javadoc:
    name: Extract Javadoc JARs into docs/javadoc
    runs-on: ubuntu-20.04
    needs: [build-and-publish]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Extract Javadoc JARs
        shell: bash
        run: |
          MODULES=("streams-bootstrap-cli")
          mkdir -p docs/javadoc
          for module in "${MODULES[@]}"; do
            echo "Looking for javadoc jar in $module..."
            jar_path=$(find "$module/build/libs" -type f -name '*-javadoc.jar' | sort | tail -n 1)
            if [ -z "$jar_path" ]; then
              echo "No javadoc jar found for $module"
              continue
            fi
            target_dir="docs/javadoc/$module"
            mkdir -p "$target_dir"
            echo "Extracting $jar_path to $target_dir"
            unzip -q "$jar_path" -d "$target_dir"
          done

  update-docs:
    runs-on: ubuntu-24.04
    needs: [extract-javadoc]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Update gh-pages
        uses: ./.github/actions/update-docs
        with:
          username: ${{ secrets.GH_USERNAME }}
          email: ${{ secrets.GH_EMAIL }}
          token: ${{ secrets.GH_TOKEN }}
